/*SELECT * FROM SCHOOL;
SELECT * FROM ADDRESS;
SELECT * FROM STAFF;
SELECT * FROM STAFF_SALARY;
SELECT * FROM PARENTS;
SELECT * FROM STUDENTS;
SELECT * FROM CLASSES;
SELECT * FROM SUBJECTS;
SELECT * FROM STUDENT_PARENT;
SELECT * FROM STUDENT_CLASSES;*/
----------------------------------------------------
SELECT * FROM STUDENTS; --FETCH ALL COLUMNS AND ALL RECORDS FROM THE STUDENTS TABLE
SELECT ID, FIRST_NAME FROM STUDENTS;
SELECT * FROM SUBJECTS WHERE SUBJECT_NAME = 'Mathematics'; --COMPARISON OPERATORS
SELECT * FROM SUBJECTS WHERE SUBJECT_NAME <> 'Mathematics' ;
SELECT * FROM STAFF_SALARY WHERE SALARY >= 10000 ;
SELECT * FROM STAFF_SALARY ORDER BY SALARY ; -- SORT THE DATA IN TERMS OF SALARY IN ASCENDING ORDER
SELECT * FROM STAFF_SALARY ORDER BY SALARY DESC ; --SORT THE DATA IN TERMS OF SALARY IN DESCENDING ORDER
SELECT * FROM STAFF_SALARY WHERE SALARY BETWEEN 5000 AND 10000 ORDER BY SALARY; --LOGICAL OPERATORS
SELECT * FROM SUBJECTS WHERE SUBJECT_NAME IN ('Mathematics', 'Science', 'Arts'); --MULTIPLE SUBJECTS NAME
SELECT * FROM SUBJECTS WHERE SUBJECT_NAME NOT IN ('Mathematics', 'Science', 'Arts'); --OTHER THAN MENTIONED MULTIPLE SUBJECTS NAME
SELECT * FROM SUBJECTS WHERE SUBJECT_NAME LIKE 'S%'; -- Starts with S
SELECT * FROM SUBJECTS WHERE SUBJECT_NAME LIKE '%c'; -- Ends with c
SELECT * FROM STAFF WHERE AGE > 50 AND GENDER  = 'F'; --AND OPERATOR
SELECT * FROM STAFF WHERE AGE > 50 OR GENDER  = 'F'; --OR OPERATOR
SELECT (5+2); --ARITHMTIC OPERATORS
SELECT 5+2 AS TOTAL;
SELECT STAFF_TYPE FROM STAFF;
SELECT DISTINCT STAFF_TYPE FROM STAFF; --FETCH DISTINCT VELAUES IN THE TABLE
SELECT STAFF_TYPE FROM STAFF LIMIT 6; --GIVES THE FIRST 6 RECORDS



---CASE STATEMENT-----------------------------------------
SELECT STAFF_ID, SALARY
, CASE WHEN SALARY >= 10000 THEN 'High Salary'
       WHEN SALARY BETWEEN 5000 AND 10000 THEN 'Low Salary'
       WHEN SALARY <= 5000 THEN 'Too Low'
  END AS RANGE
FROM STAFF_SALARY
ORDER BY 2 DESC;

-----------------------------------------------
--JOINS (TWO WAYS TO WRITE SQL QUERIES)
--1. Using JOIN keyword between tables in FROM Clause
SELECT T1.COLUMN AS C1 T1.COLUMN2 C2 T2.COLUMN3 AS T3  -- C1,C2 and C3 are aliases to the COLUMNnames.
FROM TABLE1 T1 
JOIN TABLE2 AS T2 ON T1.C1 =T2.C1 AND T1.C2 = T2.C2; -- T1 and T2 are aliases for the tables.

--2. Using "," between tables in FROM Clause.
SELECT T1.COLUMN1 AS C1, T1.COLUMN2 AS C2, T2.COLUMN3 C3
FROM TABLE1 AS T1, TABLE2 AS T2
WHERE T1.C1 = T2.C1
AND T1.C2 = T2.C2  -- Both the conditions sho


